library(haven)
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value), outlier.color = "red", outlier.size = 4,
outlier.shape = 1, label = 1) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value, label = 1), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value, label = row.names(data.raw_gathered)), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value, label = row.names(data.raw_gathered)), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value, label = row.names(data.raw_gathered)), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
geom_text(aes(label=1)) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value, label = row.names(data.raw_gathered)), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
geom_text(aes(1, value, label=1)) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
geom_text(aes(1, value, label = rownames(data.raw_gathered))) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
mutate(outlier = ifelse(is_outlier(value), value, as.numeric(NA))) %>%
ggplot() +
geom_boxplot(aes(1, value), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
geom_text(aes(1, value, label = outlier)) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data.raw_gathered %>%
mutate(outlier = ifelse(is_outlier(value), value, as.numeric(NA))) %>%
ggplot() +
geom_boxplot(aes(1, value), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
geom_text(aes(1, value, label = outlier)) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
mutate(outlier = ifelse(is_outlier(value), value, as.numeric(NA))) %>%
ggplot() +
geom_boxplot(aes(1, value), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
geom_text(aes(1, value, label = outlier), na.rm = TRUE) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.raw_gathered %>%
mutate(outlier = ifelse(is_outlier(value), value, as.numeric(NA)))
data.raw_gathered %>%
ggplot() +
geom_boxplot(aes(1, value), outlier.color = "red", outlier.size = 4,
outlier.shape = 1) +
facet_wrap(~ key, scales = "free_y") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
boxplot(data.raw_gathered)
boxplot(as.matrix(data.raw_gathered))
data.raw_gathered
data.raw
data.raw[,-1]
data.raw[,-1] %>% boxplot
data.raw[,-1] %>% boxplot
?boxplot
library(car)
Boxplot(data.raw)
Boxplot(data.raw[,-1])
meplt
melt
library(reshape)
library(reshape)
melt(data.raw)
melt(data.raw[,-1])
data.raw[,-1]
?melt
reshape::melt(data.raw)
reshape::melt(data.raw[,-1])
reshape::melt(data.raw[,-1:-2])
for (col_idx in 2:ncols(data.raw)) {
Boxplot(data.draw[,col_idx])
}
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.draw[,col_idx])
}
Boxplot(data.raw[,col_idx])
par(mfrow = c(2, 3))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx])
}
par(mfrow = c(2, 3))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx])
}
par(mfrow = c(3, 2))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx])
}
par(mfrow = c(3, 2))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx])
}
par(mfrow = c(2, 3))
par(mfrow = c(2, 3))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx])
}
Boxplot(data = data.raw[,-1])
Boxplot(o1, data = data.raw[,-1])
Boxplot(data.raw$o1)
Boxplot(data.raw$o1, data.raw$o2)
Boxplot(data.raw$o1, data.raw$o2)
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
par(mfrow = c(2, 3))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
```{r fig.width=10}
par(mfrow = c(2, 3))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(2, 3))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
```{r fig.width=10, fig.height=10}
par(mfrow = c(2, 3))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(1, 6))
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
```{r fig.width=10, fig.height=3}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colnames(data.raw)[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = rowname_labels[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = rowname_labels[col_idx])
}
colname_labels <- c("o1", "Obvod ramen", "Obvod hrudníku", "Obvod pasu", "Obvod boků", "Obvod lýtka (průměr)")
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colname_labels[col_idx])
}
colname_labels <- c("id", "o1", "Obvod ramen", "Obvod hrudníku", "Obvod pasu", "Obvod boků", "Obvod lýtka (průměr)")
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colname_labels[col_idx])
}
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colname_labels[col_idx])
}
colname_labels <- c("id", "Obvod ramen", "Obvod hrudníku", "Obvod pasu", "Obvod boků", "Obvod lýtka (průměr)", "Obvod zápěstí (průměr)")
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colname_labels[col_idx])
}
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30)
mvn(data.raw[,-1], multivariatePlot = "qq")
data.without.outliers <- mvn(data.raw[,-1], multivariateOutlierMethod = "quan", showOutliers = TRUE, showNewData = TRUE)
data.without.outliers$newData
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(df)) {
Boxplot(df[,col_idx], xlab = colname_labels[col_idx])
}
df <- data.without.outliers$newData
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(df)) {
Boxplot(df[,col_idx], xlab = colname_labels[col_idx])
}
data.raw[44,]
df[44,]
data.raw[44,]
data.without.outliers <- mvn(data.raw[,], multivariateOutlierMethod = "quan", showOutliers = TRUE, showNewData = TRUE)
data.raw[44,]
data.raw[44,-1]
f
data.raw[44,-1] %in% df
data.raw[44,2] %in% df[,2]
df[,2]
which(df[,2] == df[44,2])
which(df[,2] == as.vector(df[44,2]))
df[44,2]
which(df[,2] == 86.5)
which(df[,2] == 86.4)
df[44]
df[44,]
data.raw[44,2]
data.raw[44,2] %>% unlist
data.raw[44,2] %>% unlist %>% unname
val
which(df[,2] == val)
val <- data.raw[44,2] %>% unlist %>% unname
which(df[,2] == val)
idx <- which(df[,2] == val)
data.raw %>%
intersect(df)
data.raw[,-1] %>%
intersect(df)
data.raw[,-1] %>%
setdiff(df)
data.raw[1:20,-1]
data.raw[,-1] %>%
setdiff(df)
data.raw[1:20,-1]
write.csv("data.csv", data.spss)
write.csv(data.spss, "data.csv")
data.without.outliers <- mvn(data.raw[,-1], multivariateOutlierMethod = "quan", showOutliers = TRUE, showNewData = TRUE)
data.without.outliers$multivariateOutliers
data.pca <- prcomp(data.raw[,-1], center = TRUE, scale = TRUE)
summary(data.pca)
screeplot(data.pca, type = "lines")
autoplot(data.pca)
summary(data.pca)
autoplot(data.pca)
screeplot(data.pca, type = "lines")
autoplot(data.pca)
autoplot(data.pca)
autoplot(data.pca, data = data.raw, label = TRUE)
autoplot(data.pca)
par(mfrow=(1, 2))
par(mfrow=c(1, 2))
autoplot(data.pca)
autoplot(da
par(mfrow=c(1, 2))
par(mfrow=c(1, 2))
autoplot(data.pca)
autoplot(data.pca, data = data.raw, label = TRUE)
par(mfrow=c(1, 2))
autoplot(data.pca)
autoplot(data.pca, data = data.raw, label = TRUE)
par(mfrow=c(2, 2))
autoplot(data.pca)
autoplot(data.pca, data = data.raw, label = TRUE)
mvn(data.raw[,-1], multivariatePlot = "qq") %>% invisible()
library(foreign)
library(tidyverse)
library(bootstrap)
library(ggfortify)
library(MVN)
library(haven)
library(reshape)
library(car)
library(gridExtra)
mvn(data.raw[,-1], multivariatePlot = "qq") %>% invisible()
```{r}
mvn(data.raw[,-1], multivariatePlot = "qq") %>% invisible()
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30)
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free", labeller = labeller(colname_labels)) +
geom_histogram(bins=30)
set_names(colname_labels)
set_names(colname_labels, sort(unique(group)))
set_names(colname_labels)
as_labeller(set_names(colname_labels))
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free", labeller = as_labeller(set_names(colname_labels))) +
geom_histogram(bins=30)
as_labeller(set_names(colname_labels))
lbl <- as_labeller(set_names(colname_labels))
lbl
lbl(2)
lbl(1)
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30)
colnames(data.raw_gathered) <- colname_labels
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30)
colnames(data.raw_gathered) <- colname_labels[,-1]
colnames(data.raw_gathered) <- colname_labels-1]
colnames(data.raw_gathered) <- colname_labels[-1]
colnames(data.raw_gathered) <- colname_labels[-1]
colname_labels
colnames(data.raw_gathered) <- colname_labels[2:7]
colnames(data.raw_gathered) <- colname_labels
colname_labels
colnames(data.raw_gathered)
colnames(data.raw) <- colname_labels
data.raw_gathered <-
data.raw[,-1] %>%
keep(is.numeric) %>%
gather()
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30)
data.raw_gathered %>%
ggplot(aes(sample = value)) +
facet_wrap(~ key, scales = "free") +
stat_qq() +
stat_qq_line() +
ggtitle("QQ graf jednotlivých veličin")
data.raw_gathered %>%
ggplot(aes(sample = value)) +
facet_wrap(~ key, scales = "free") +
stat_qq() +
stat_qq_line()
par(mfrow = c(1, 6))
par(mfrow = c(1, 6))
for (col_idx in 2:ncol(data.raw)) {
Boxplot(data.raw[,col_idx], xlab = colname_labels[col_idx])
}
screeplot(data.pca, type = "lines", title = "screeplot")
screeplot(data.pca, type = "lines", caption = "screeplot")
screeplot(data.pca, type = "lines")
library(foreign)
library(tidyverse)
library(bootstrap)
library(ggfortify)
library(MVN)
library(haven)
library(reshape)
library(car)
library(gridExtra)
mvn(data.raw[,-1], multivariatePlot = "qq") %>% invisible()
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30) +
xlab("Hodnota") +
ylab("Počet")
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30) +
xlab("Hodnota") +
ylab("Počet")
```{r fig.height=3.3}
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30) +
xlab("Hodnota") +
ylab("Počet")
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30) +
xlab("Hodnota") +
ylab("Počet")
colnames(data.raw) <- colname_labels
data.raw_gathered <-
data.raw[,-1] %>%
keep(is.numeric) %>%
gather()
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30) +
xlab("Hodnota") +
ylab("Počet")
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30) +
xlab("Hodnota") +
ylab("Počet") %>% invisible()
data.raw_gathered %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram(bins=30) +
xlab("Hodnota") +
ylab("Počet") %>% invisible()
data(cars)
plot(cars)
plot(mpg)
fit <- lm(dist ~ speed, cars)
fit
(mean(cars$dist) - (-17.579))/mean(cars$speed)
nrow(cars)
sample(5, cars)
sample(cars, 5)
sample(cars, 5, replace = TRUE)
sample(1:nrow(cars), 5, replace = TRUE)
idx_sample <- sample(1:nrow(cars), 5, replace = TRUE)
cars[idx_sample]
cars[idx_sample,]
fit_sample <- lm(dist ~ speed, cars[idx_sample,])
summary(fit_sample)
summary(fit)
0.4155*sqrt(5)
O.9290862/sqrt(50)
0.9290862/sqrt(50)
1.459*sqrt(5)
3.262423 / sqrt(50)
3.262423 / sqrt(25)
idx_sample2 <- sample(1:nrow(cars), 25, replace = TRUE)
fit_sample2 <- lm(dist ~ speed, cars[idx_sample2,])
summary(fit_sample2)
0.762 * sqrt(24)
3.733022 / sqrt(49)
0.762 * sqrt(23)
3.654424 / sqrt(48)
summary(fit)
KMO
KMO
data.raw1 <- read.csv("https://nb.vse.cz/~zouharj/econ/skoda.csv")
data.raw1
binom.test(235, 1/6)
binom.test(235, 1/6, conf.level = 0.05)
binom.test(235, 1/6, conf.level = 0.05, alternative = "greater")
binom.test(1/6, 235, conf.level = 0.05, alternative = "greater")
binom.test(x = 51, n = 235, p = 1/6, conf.level = 0.05, alternative = "greater")
binom.test(x = 40, n = 235, p = 1/6, conf.level = 0.05, alternative = "greater")
binom.test(x = 52, n = 235, p = 1/6, conf.level = 0.05, alternative = "lesser")
binom.test(x = 52, n = 235, p = 1/6, conf.level = 0.05, alternative = "less")
binom.test(x = 52, n = 235, p = 1/6, conf.level = 0.05, alternative = "less")
binom.test(x = 52, n = 235, p = 1/6, conf.level = 0.05, alternative = "greater")
library(MASS)
tbl <- table(survey$Smoke, survey$Exer)
tbl
chisq.test(tbl)
smoke.freq <- table(survey$Smoke)
smoke.prob <- c(.045, .795, .085, .075)
chisq.test(smoke.freq, p = smoke.prob)
